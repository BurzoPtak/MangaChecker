<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALEAAACUCAYAAADcSMhAAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAABNlJREFUeF7t3SFP5FoYxvGRSCQSiUQikUg+Ah8DhxyJBIdEkmBIMEgkEklQSOQE
        Qbp5oN2U7mHbzgzlPOf9/5I3m9ztZvcy/3vmnHbYO6sAc0QMe0QMe0QMe0QMe0QMe0QMe0QMe0QMe0QM
        e0QMe0QMe0QMe0QMe0QMe0QMe0QMe0QMe0QMe0QMe0QMe0QMe0QMe0QMe0QMe0QMe0QMe0QMe0QMe0SM
        lby/v1eLxaJ6e3ur/8n0iBhLu729rWaz2d85Pz+vnp+f65+dDhFjKd2Am5nP5/UV0yFijKYtRCrgZqZG
        xBhNe+BUvM1MzS7iHA4S0elrn4q3malZRZzLQQLVx9e+/Vq0Z2o2Eed0kED1sXjoa999Pa6vr+srpmMR
        cW4HCeTFooDcDhLIi0UBuR0kkBebAnI6SCAvNgXkdJBAXljGYI+IYY+IYY+IYY+IYY+IYY+IYY+IYY+I
        YY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+I
        YY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYY+IYa/YiB8eHqq7u7uPH1G2
        4iJ+fX2tDg4Ovvyf+Pf29qrHx8f6CpSmuIj39/e/BNzMzs5OtVgs6qtQkqIivr+/TwbczOXlZX1luSJu
        o4qK+PT0NBlvM1qNS91WRN5GFRXxycnJlxcxNaVuKyJvo4qKeD6fJ1/I7pS2rejbRl1dXdVXlqmoiG9u
        bpIvYndK21b0baP0DlWyoiLW2+b29nbyhexOSW+zfdsoIjajt9atra3ki9mdUt5muwe67hCxIe15Uy9m
        d3Z3dz9O9c50Ky3179YeIjY0ZluhkJ23FX37YY2uKVmREcuYbYUOhK769sMbGxvV09NTfXWZio1YItyt
        6Iv4+Pi4vrJcRUcsCjT14nbH9W5FX8Sl74el+Ij1Vjp0f+z4EISIA0QsLy8vg0J23FYQcZCIZehtt83N
        TatPgEW/RyxhIh77NM9hReYe8acwEcvQ1VjjcNDjHvGnUBGPWY01ua9iffvhCPeIJVTEMuYhiCbnR9N9
        EUe4RyzhIpZlQs5xj/zdB+GbibAflpARi1bXMVuL3A57fR+E1xBxAGNXZIWsX5ODIYc6Ig5C3xmsA1Aq
        gu8mh2/A1BYn9Wdrz8XFRX112cJHLPqgkB5ypEL4bn7zFtyQ+8P6D1NPKiMg4trQR9Pt0Yr8G9uLIVuJ
        0r4Z9n+IuGXsHrmZqWPue9R8eHhYXxkDEXcsG7Jmir0yj5r/RcQJq4SsvbUOVD/1IaK+e8OaCI+a24j4
        G7qPrL+MZeyBrz1amRX0ulbnIZ/9iPKouY2IeyxzCy41OjTqbX7Z6dsHNxPlUXMbEQ+wzC2435oo94bb
        iHgg3YLTKpdzzJHuDbcR8UirHPp+eqId6BpEvAQd+hSMVuZ17JfXMVFXYSHiFeWwX1bAkZ7QdRHxGmgF
        1B2EqffMile/b9QVuEHEa9YErTk6OkrGt46Jvvq2EfEP04OHs7Ozv2GvY7Qfj776thEx7BEx7BEx7BEx
        7BEx7BEx7BEx7BEx7BEx7BEx7BEx7BEx7BEx7BEx7BEx7BEx7BEx7BEx7BEx7BEx7BExzFXVH6ADqyjb
        zEhNAAAAAElFTkSuQmCC
</value>
  </data>
</root>